import glob

FILESIN  = glob.glob("task*.txt")
COLLECT  = 'sum.out'

# Master subtask: accumulate value of expressions in .out files
rule subtask1:
    input: FILESIN
    output: COLLECT
    run:
        sum = 0
        for f_ in input:
            with open(f_,'r') as f:
                sum += eval(f.read())
        with open(COLLECT,'w') as f:
            f.write(str(sum))

## -------------------------------------
## To add an atomic rule operating on
## each input file, use below:
#rule atomictask:
#    input:
#        'task{name}.txt'
#    output:
#        'task{name}.out'
#    shell:
#        'cp {input} {output}'
## -------------------------------------

rule clean:
    shell:
        'rm -f {COLLECT}'

